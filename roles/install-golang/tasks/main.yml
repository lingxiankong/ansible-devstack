---
- name: Check if go has satisfied requirement
  shell: /usr/local/go/bin/go version |grep -Eo '([0-9]+\.)+[0-9]+'
  ignore_errors: true
  register: curr_go_version

- name: Download the Go tarball
  get_url:
    url: '{{ go_download_location }}'
    dest: '/usr/local/src/{{ go_tarball }}'
  when:
    - curr_go_version.stdout != go_version

- name: Remove old installation of Go
  file:
    path: /usr/local/go
    state: absent
  when:
    - curr_go_version.stdout != go_version

- name: Extract the Go tarball to place
  unarchive:
    src: '/usr/local/src/{{ go_tarball }}'
    dest: /usr/local
    remote_src: yes
  when:
    - curr_go_version.stdout != go_version

- name: Set golang env vars
  set_fact:
    golang_env:
      GOPATH: '{{ ansible_user_dir }}/go'
      PATH: '/usr/local/go/bin:{{ ansible_user_dir }}/go/bin:{{ ansible_env.PATH }}'

- name: Set golang env to profile
  copy:
    dest: /etc/profile.d/go.sh
    content: |
      export GOROOT=/usr/local/go
      export GOPATH={{ ansible_user_dir }}/go
      export PATH=$PATH:$GOROOT/bin:$GOPATH/bin/

- name: Merge golang env vars into global env
  set_fact:
    global_env: '{{ global_env | combine(golang_env) }}'
